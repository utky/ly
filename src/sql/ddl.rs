const LANES: &str = "CREATE TABLE IF NOT EXISTS lanes (
  id INTEGER PRIMARY KEY,
  name VARCHAR NOT NULL UNIQUE,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
 )";

const LANES_INSERT: &str =
    "INSERT INTO lanes(id, name) VALUES (1, 'backlog'), (2, 'todo'), (3, 'done')";

const PRIORITIES: &str = "CREATE TABLE IF NOT EXISTS priorities (
  id INTEGER PRIMARY KEY,
  name VARCHAR NOT NULL UNIQUE,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
 )";

const PRIORITIES_INSERT: &str =
    "INSERT INTO priorities(id, name) VALUES (0, 'n'), (1, 'l'), (2, 'm'), (3, 'h')";

const TASKS: &str = "CREATE TABLE IF NOT EXISTS tasks (
  id INTEGER PRIMARY KEY,
  lane_id TINYINT,
  priority INTEGER NOT NULL,
  summary VARCHAR NOT NULL,
  estimate INTEGER NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (lane_id) REFERENCES lanes (id),
  FOREIGN KEY (priority) REFERENCES priorities (id)
)";

const TODO: &str = "CREATE TABLE IF NOT EXISTS todo (
  date TIMESTAMP PRIMARY KEY,
  note VARCHAR,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
)";

const TODO_TASKS: &str = "CREATE TABLE IF NOT EXISTS todo_tasks (
  date DATE NOT NULL,
  task_id INTEGER NOT NULL,
  todo_order INTEGER NOT NULL DEFAULT 0,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (date, task_id),
  FOREIGN KEY (date) REFERENCES todo (date) ON DELETE CASCADE,
  FOREIGN KEY (task_id) REFERENCES tasks (id)
)";

const TIMER_TYPES: &str = "CREATE TABLE IF NOT EXISTS timer_types (
  id INTEGER PRIMARY KEY,
  name VARCHAR NOT NULL UNIQUE,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
 )";

const TIMER_TYPES_INSERT: &str =
    "INSERT INTO timer_types(id, name) VALUES (0, 'pomodoro'), (1, 'short break'), (2, 'long break')";

const TIMERS: &str = "CREATE TABLE IF NOT EXISTS timers (
  id INTEGER PRIMARY KEY,
  timer_type INTEGER NOT NULL,
  label VARCHAR NOT NULL,
  started_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  duration_min INTEGER NOT NULL,
  FOREIGN KEY (timer_type) REFERENCES timer_types (id)
)";

const TIMER_TASKS: &str = "CREATE TABLE IF NOT EXISTS timer_tasks (
  timer_id INTEGER,
  task_id INTEGER,
  PRIMARY KEY (timer_id, task_id),
  FOREIGN KEY (timer_id) REFERENCES timers (id) ON DELETE CASCADE,
  FOREIGN KEY (task_id) REFERENCES tasks (id)
)";

const ESTIMATES: &str = "CREATE TABLE IF NOT EXISTS estimates (
  id INTEGER PRIMARY KEY,
  task_id INTEGER,
  value INTEGER NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (task_id) REFERENCES tasks (id)
 )";

const POMODOROS: &str = "CREATE TABLE IF NOT EXISTS pomodoros (
  id INTEGER PRIMARY KEY,
  task_id INTEGER,
  started_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  finished_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (task_id) REFERENCES tasks (id)
)";

const BREAKS: &str = "CREATE TABLE IF NOT EXISTS breaks (
  id INTEGER PRIMARY KEY,
  started_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  finished_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
)";

const INTERRUPTIONS: &str = "CREATE TABLE IF NOT EXISTS interruptions (
  id INTEGER PRIMARY KEY,
  task_id INTEGER,
  external BOOLEAN,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (task_id) REFERENCES tasks (id)
)";

const TAGS: &str = "CREATE TABLE IF NOT EXISTS tags (
  id INTEGER PRIMARY KEY,
  name VARCHAR NOT NULL UNIQUE,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
)";

const TAGGED_TASKS: &str = "CREATE TABLE IF NOT EXISTS tagged_tasks (
  tag_id INTEGER NOT NULL,
  task_id INTEGER NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (tag_id, task_id),
  FOREIGN KEY (tag_id) REFERENCES tags (id) ON DELETE CASCADE,
  FOREIGN KEY (task_id) REFERENCES tasks (id)
)";

pub const STATEMENTS: [&str; 17] = [
    LANES,
    LANES_INSERT,
    PRIORITIES,
    PRIORITIES_INSERT,
    TASKS,
    TIMER_TYPES,
    TIMER_TYPES_INSERT,
    TIMERS,
    TIMER_TASKS,
    TODO,
    TODO_TASKS,
    ESTIMATES,
    POMODOROS,
    BREAKS,
    INTERRUPTIONS,
    TAGS,
    TAGGED_TASKS,
];
